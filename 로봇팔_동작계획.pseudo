// 전역 변수 및 설정
Define robot_arm = MoveIt2_Control_Interface()
Define tof_camera = ToF_Camera_Interface()
Define known_canister_model_3d = Load_CAD_File("canister.stl")
Define hand_eye_calibration_matrix = Load_Calibration_File()

// 메인 실행 함수
Function Main_Pick_and_Place_Routine()

    // 1. 인식 (Perception)
    //-------------------------------------------------
    Print("1. 인식 단계 시작: 캐니스터 탐색")
    
    // 1-1. 센서 데이터 획득
    [image_2d, point_cloud_3d] = tof_camera.Capture_Frame()

    // 1-2. 2D 위치 탐지 (형상 기반 매칭)
    detected_location_2d = Shape_Based_Matching(image_2d, known_canister_model_2d)

    // 1-3. 탐지 성공 여부 확인
    IF detected_location_2d is Not_Found THEN
        Print("오류: 캐니스터를 찾지 못했습니다.")
        Return to Start_Position // 또는 에러 처리
    END IF

    // 1-4. 3D 자세 계산 (3D 모델 정합)
    target_point_cloud = Extract_ROI(point_cloud_3d, detected_location_2d)
    filtered_point_cloud = Noise_Filter(target_point_cloud)
    canister_pose_in_camera = ICP_Matching(filtered_point_cloud, known_canister_model_3d)

    // 1-5. 로봇 좌표계로 변환
    target_pose_in_robot_base = Transform_Coordinates(canister_pose_in_camera, hand_eye_calibration_matrix)


    // 2. 동작 계획 (Motion Planning)
    //-------------------------------------------------
    Print("2. 동작 계획 단계 시작: 안전한 경로 탐색")

    // 2-1. 주변 환경 정보 업데이트
    current_obstacles_map = Convert_to_OctoMap(point_cloud_3d)
    robot_arm.Update_Planning_Scene(current_obstacles_map)

    // 2-2. 목표 지점 설정 (파지 직전 위치)
    grasp_approach_pose = Calculate_Approach_Pose(target_pose_in_robot_base)
    robot_arm.Set_Goal_Pose(grasp_approach_pose)

    // 2-3. 경로 계획 실행
    [success, planned_trajectory] = robot_arm.Plan_Path()

    // 2-4. 계획 성공 여부 확인
    IF success is FALSE THEN
        Print("오류: 목표 지점까지의 경로 계획에 실패했습니다.")
        Return to Start_Position
    END IF


    // 3. 실행 (Execution)
    //-------------------------------------------------
    Print("3. 실행 단계 시작: 계획된 경로로 이동")
    
    // 3-1. 계산된 경로로 로봇팔 이동
    robot_arm.Execute_Trajectory(planned_trajectory)

    // 3-2. 파지 동작 수행 (직선 이동 및 그리퍼 닫기)
    robot_arm.Move_Linearly_To(target_pose_in_robot_base)
    robot_arm.Close_Gripper()

    // 3-3. 물체 들어 올리기 및 목표 위치로 이동
    robot_arm.Move_To_Place_Location()
    robot_arm.Open_Gripper()

    // 3-4. 시작 위치로 복귀
    robot_arm.Return_to_Start_Position()

    Print("작업 완료!")

END Function